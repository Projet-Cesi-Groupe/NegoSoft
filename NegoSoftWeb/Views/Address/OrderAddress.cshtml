@model NegoSoftWeb.Models.ViewModels.AddressViewModel

@{
    ViewData["Title"] = "Address Information";
}

<form asp-action="OrderAddress" method="post" id="address-payment-form">
    <h3>Informations de Livraison</h3>

    <div class="form-group">
        <label asp-for="AddDeliveryStreet">Adresse</label>
        <input asp-for="AddDeliveryStreet" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddDeliveryCity">Ville</label>
        <input asp-for="AddDeliveryCity" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddDeliveryZipCode">Code Postal</label>
        <input asp-for="AddDeliveryZipCode" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddDeliveryCountry">Pays</label>
        <input asp-for="AddDeliveryCountry" class="form-control" />
    </div>

    <h3>Informations de Facturation</h3>

    <div class="form-group">
        <label asp-for="AddBillingStreet">Adresse</label>
        <input asp-for="AddBillingStreet" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddBillingCity">Ville</label>
        <input asp-for="AddBillingCity" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddBillingZipCode">Code Postal</label>
        <input asp-for="AddBillingZipCode" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddBillingCountry">Pays</label>
        <input asp-for="AddBillingCountry" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary btn-infoperso">Save Address and Proceed to Payment</button>
</form>

<script src="https://js.stripe.com/v3/"></script>
<script>
    document.querySelector('#address-payment-form').addEventListener('submit', async (event) => {
        event.preventDefault();

        const form = event.target;
        const formData = new FormData(form);

        const responseAddress = await fetch(form.action, {
            method: form.method,
            body: formData
        });

        if (responseAddress.ok) {
            const responsePayment = await fetch('/Payments/CreateCheckoutSession', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            const sessionId = await responsePayment.json().then(data => data.id);
            const stripe = Stripe('pk_test_51Pt2eWGXcf21H8OOwY3ZEwcnpMOkilNs10pk28MooauJN1LrozrH5GpJMMcimX5EoqTxIkOGXOVCrWXxkfCgPn9f00lZIvxjXg');
            const { error } = await stripe.redirectToCheckout({ sessionId });
            if (error) {
                console.error('Error redirecting to checkout:', error);
            }
        } else {
            console.error('Error saving address:', responseAddress.statusText);
        }
    });
</script>
