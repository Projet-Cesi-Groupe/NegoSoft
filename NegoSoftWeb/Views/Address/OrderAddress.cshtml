@model NegoSoftWeb.Models.ViewModels.AddressViewModel

@{
    ViewData["Title"] = "Address Information";
}

<h2>Address Information</h2>

<form asp-action="OrderAddress" method="post">
    <h3>Delivery Address</h3>

    <div class="form-group">
        <label asp-for="AddDeliveryStreet"></label>
        <input asp-for="AddDeliveryStreet" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddDeliveryCity"></label>
        <input asp-for="AddDeliveryCity" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddDeliveryZipCode"></label>
        <input asp-for="AddDeliveryZipCode" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddDeliveryCountry"></label>
        <input asp-for="AddDeliveryCountry" class="form-control" />
    </div>

    <h3>Billing Address</h3>

    <div class="form-group">
        <label asp-for="AddBillingStreet"></label>
        <input asp-for="AddBillingStreet" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddBillingCity"></label>
        <input asp-for="AddBillingCity" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddBillingZipCode"></label>
        <input asp-for="AddBillingZipCode" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="AddBillingCountry"></label>
        <input asp-for="AddBillingCountry" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Save Address</button>
</form>

<form id="checkout-form" method="post" class="mt-4">
	<button type="submit" class="btn btn-primary">Proceed to Payment</button>
</form>

<script src="https://js.stripe.com/v3/"></script>
<script>
    document.getElementById('checkout-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const response = await fetch('/Payments/CreateCheckoutSession', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        });

        const sessionId = await response.json().then(data => data.id);
        const stripe = Stripe('pk_test_51Pt2eWGXcf21H8OOwY3ZEwcnpMOkilNs10pk28MooauJN1LrozrH5GpJMMcimX5EoqTxIkOGXOVCrWXxkfCgPn9f00lZIvxjXg');
        const { error } = await stripe.redirectToCheckout({ sessionId });
        if (error) {
            console.error('Error redirecting to checkout:', error);
        }
    });
</script>